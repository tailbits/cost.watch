---
import Container from './container.astro';
import Logo from './logo-text.astro';
---

<header>
  <nav>
    <Container class="relative z-50 flex justify-between items-center py-8">
      <a href="/" aria-label="Home">
        <Logo class="h-5 w-auto" />
      </a>

      <a href="https://github.com/tailbits/costwatch" target="_blank" class="inline-flex items-center justify-center rounded-lg border py-2 px-4 text-sm transition-colors border-gray-300 text-gray-700 hover:border-gray-400 active:bg-gray-100 active:text-gray-700/80">
        <img alt="" src="/images/logos/github.svg" class="w-4 h-4 mr-2" />
        <span>tailbits/costwatch</span>
        <span id="header-github-stars" class="ml-2 px-2 py-0.5 bg-gray-100 text-gray-700 rounded text-xs font-medium" style="display: none;"></span>
      </a>
    </Container>
  </nav>
</header>

<script>
  // Function to fetch GitHub stars for header
  async function fetchHeaderGitHubStars() {
    const starsElement = document.getElementById('header-github-stars');
    if (!starsElement) return;

    try {
      const response = await fetch('https://api.github.com/repos/tailbits/costwatch');
      if (response.ok) {
        const data = await response.json();
        const stars = data.stargazers_count;

        // Format the star count
        let formattedStars;
        if (stars >= 1000) {
          formattedStars = (stars / 1000).toFixed(1) + 'k';
        } else {
          formattedStars = stars.toString();
        }

        // Use GitHub's star icon with proper color
        starsElement.innerHTML = `
          <svg class="inline-block w-3 h-3 mr-1" style="color: #f59e0b;" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.751.751 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z"/>
          </svg>
          ${formattedStars}
        `;
        starsElement.style.display = 'inline-flex';
        starsElement.style.alignItems = 'center';
      }
    } catch (error) {
      // Hide the element if fetch fails
      starsElement.style.display = 'none';
    }
  }

  // Initialize when the DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    fetchHeaderGitHubStars();
  });
</script>
